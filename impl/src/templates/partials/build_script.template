rust_binary(
    name = "{{ crate_name_sanitized }}_build_script",
    srcs = glob(["**/*.rs"]),
    {%- if crate.build_script_target.path %}
    crate_root = "{{ crate.build_script_target.path }}",
    {%- else %}
    crate_root = "build.rs",
    {%- endif %}
    edition = "{{ crate.edition }}",
    deps = [
      {%- for dependency in crate.build_dependencies %}
        "{{dependency.buildable_target}}",
      {%- endfor %}
    ],
    rustc_flags = [
        "--cap-lints=allow",
    ],
    crate_features = [
      {%- for feature in crate.features %}
      "{{feature}}",
      {%- endfor %}
    ],
    data = glob(["*"]),
    version = "{{ crate.pkg_version }}",
    visibility = ["//visibility:private"],
)

genrule(
    name = "{{ crate_name_sanitized  }}_build_script_executor",
    {%- if crate.raze_settings.buildrs_build_script_srcs_attr %}
    srcs = {{ crate.raze_settings.buildrs_build_script_srcs_attr }},
    {%- else %}
    srcs = glob(["*", "**/*.rs", "**/Cargo.toml"]),
    {%- endif %}
    outs = ["{{ crate_name_sanitized  }}_out_dir_outputs.tar.gz"],
    tools = [
      ":{{ crate_name_sanitized  }}_build_script",
    ],
    tags = ["no-sandbox"],
    cmd = "mkdir -p $$(dirname $@)/{{ crate_name_sanitized}}_out_dir_outputs/;"
        + " (export CARGO_MANIFEST_DIR=\"$$PWD/$$(dirname $(location :{{ crate.manifest_path }}))\";"
        # TODO(acmcarther): This needs to be revisited as part of the cross compilation story.
        #                   See also: https://github.com/google/cargo-raze/pull/54
        + " export TARGET='{{ workspace.platform_triple }}';"
        + " export RUST_BACKTRACE=1;"
        {%- for feature in crate.features %}
        + " export CARGO_FEATURE_{{ feature | upper | replace(from="-", to="_") }}=1;"
        {%- endfor %}
        + " export OUT_DIR=$$PWD/$$(dirname $@)/{{ crate_name_sanitized }}_out_dir_outputs;"
        + " export BINARY_PATH=\"$$PWD/$(location :{{ crate_name_sanitized }}_build_script)\";"
        + " export OUT_TAR=$$PWD/$@;"
        {%- for environment_variable in crate.raze_settings.buildrs_additional_environment_variables %}
        + " export {{ environment_variable }};"
        {%- endfor %}
        + " cd $$(dirname $(location :{{ crate.manifest_path }})) && $$BINARY_PATH && tar -czf $$OUT_TAR -C $$OUT_DIR .)"
)
